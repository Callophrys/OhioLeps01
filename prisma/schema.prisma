// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model StateCounty {
    stateCountyId Int @id
    state String // @db.String(2)
    county String // @db.String(30)

    // Relations - Raw SQL in seed.ts will set this up.  Uncomment before doing
    //             any schema changes with this prisma.
    sites Site[]

    @@unique([state, county])
}

model Site {
    siteId Int @id @default(autoincrement())
    siteName String // @db.String(30)
    county String // @db.String(12)
    township String? // @db.String(50)
    locationZip String? // @db.String(50)
    siteAddress String? // @db.String(40)
    siteAddress2 String? // @db.String(40)
    siteCityStateZip String? // @db.String(40)
    person String // @db.String(30)
    address String? // @db.String(40)
    address2 String? // @db.String(40)
    cityStateZip String? // @db.String(40)
    phone String? // @db.String(12)
    email String? // @db.String(30)
    latitudeStart String? // @db.String(50)
    latitudeEnd String? // @db.String(50)
    altPerson String? // @db.String(30)
    altAddress String? // @db.String(40)
    altAddress2 String? // @db.String(40)
    altCityStateZip String? // @db.String(40)
    altPhone String? // @db.String(12)
    altEmail String? // @db.String(30)
    otherParticipants String? // @db.String(250)
    description String? @db.Text
    s1995 Int @default(5)
    s1996 Int @default(5)
    s1997 Int @default(5)
    s1998 Int @default(5)
    s1999 Int @default(5)
    s2000 Int @default(5)
    s2001 Int @default(5)
    s2002 Int @default(5)
    s2003 Int @default(5)
    s2004 Int @default(5)
    changeDate DateTime @default(now())

    // Relations - Raw SQL in seed.ts will set this up.  Uncomment before doing
    //             any schema changes with this prisma.
    stateCounty StateCounty @relation(fields: [stateCountyId], references: [stateCountyId])
    stateCountyId Int //@default(0) // new so need SQL to get this using county field
    
    // Relations
    //siteDates SiteDate[]

    // Relations
    //siteStatuses SiteStatus[]
}

model Checklist {
    checklistId Int @id @default(autoincrement())
    checklistKey String
    genus String // @db.String(20)
    species String // @db.String(20)
    subspecies String? // @db.String(16)
    combinedLatin String // @db.String(50)
    commonName String? // @db.String(30)
    show Boolean
    kind String // @db.String(1)
    revised String // @db.String(1)
    author String // @db.String(22)
    year String?
    changeDate DateTime?
    changeBy String? // @db.String(25)
    comment String? // @db.String(255)
    referenceCount Int @default(0)
    // TODO: figure out this field and its spelling
    countyCount Int @default(0)
    endangered String? // @db.String(50)
    synonym String? // @db.String(50)
    family Int @default(0)
    gCKey Int @default(0)
    grp Int @default(0)
    sortOrder String? // @db.String(10)
    tmp_SitesReporting Int?
    tmp_TotalCount Int?
    tmp_HighCount Int?

    @@index([genus])
    @@index([species])
    @@index([commonName])
    //@@unique([checklistKey])

    // Relations
    //siteObservations SiteObservation[]
}

model SiteObservation {
    siteObservationId Int @id @default(autoincrement())
    // ** use siteObservationId as real key now - and later just drop 'seqId Int?'
    seqId Int?
    checklistKey String?
    idCode String? // @db.String(1)  // in { how id'ed:  O observ, N net, P photo, C collected }
    total Int      // system maintained
    s1 Int?        // counts of CheckList species per section
    s2 Int?
    s3 Int?
    s4 Int?
    s5 Int?
    s6 Int?
    s7 Int?
    s8 Int?
    s9 Int?
    s10 Int?
    s11 Int?
    s12 Int?
    s13 Int?
    s14 Int?
    s15 Int?
    mark String? // @db.String(50)
    dateChg DateTime @default(now())
  
    // Relations
    //checklist Checklist @relation(fields: [checklistId], references: [checklistId])
    //checklistId Int //@default(0) // new so need SQL to get this

    // Relations
    //siteDate SiteDate @relation(fields: [siteDateId], references: [siteDateId])
    //siteDateId Int //@default(0) // new so need SQL to get this
}

model StatusCode {
    statusCodeId Int @id
    code String
    description String

    // Relations - Loads fine so no need to comment or uncomment
    siteStatuses SiteStatus[]
}

model SiteStatus {
    siteStatusId Int @id @default(autoincrement())
    siteId Int
    statusCodeId Int
    year Int

    // Relations - Loads fine so no need to comment or uncomment
    statusCode StatusCode @relation(fields: [statusCodeId], references: [statusCodeId])
    // provided by load 'statusCodeId Int'

    // Relations
    //site Site @relation(fields: [siteId], references: [siteId])
    // provided by load 'siteId Int'
  
    @@unique([siteId, year])
}

enum Weather {
    U
    O
    R
    S
}

model SiteDate {
    siteDateId Int @id // @default(autoincrement())
    siteId Int
    seqId Int? // temp and will be query key
    recordDate DateTime // was "date", a reserved word
    week Int
    recorder String // @db.String(25)
    startTime DateTime?
    endTime DateTime?
    startTemp Int?
    endTemp Int?
    startClouds Int?
    endClouds Int?
    startWindDir String? // @db.String(3)
    endWindDir String? // @db.String(3)
    startWindMPH Int?
    endWindMPH Int?
    w1 Weather @default(U)
    w2 Weather @default(U)
    w3 Weather @default(U)
    w4 Weather @default(U)
    w5 Weather @default(U)
    w6 Weather @default(U)
    w7 Weather @default(U)
    w8 Weather @default(U)
    w9 Weather @default(U)
    w10 Weather @default(U)
    w11 Weather @default(U)
    w12 Weather @default(U)
    w13 Weather @default(U)
    w14 Weather @default(U)
    w15 Weather @default(U)
    lEsec1 String? // @db.String(8)
    lEsec2 String? // @db.String(8)
    lEsec3 String? // @db.String(8)
    lEsec4 String? // @db.String(8)
    lEsec5 String? // @db.String(8)
    lEsec6 String? // @db.String(8)
    lEsec7 String? // @db.String(8)
    lEsec8 String? // @db.String(8)
    lEsec9 String? // @db.String(8)
    lEsec10 String? // @db.String(8)
    lEsec11 String? // @db.String(8)
    lEsec12 String? // @db.String(8)
    lEsec13 String? // @db.String(8)
    lEsec14 String? // @db.String(8)
    lEsec15 String? // @db.String(8)
    larvaObA String? // @db.String(25)
    larvaObB String? // @db.String(25)
    larvaObC String? // @db.String(25)
    larvaObD String? // @db.String(25)
    energySource1 String? // @db.String(25)
    energySource2 String? // @db.String(25)
    energySource3 String? // @db.String(25)
    energySource4 String? // @db.String(25)
    flowersInBloom String? // @db.String(150)
    fieldNotes String? // @db.String(100)
    dateChg DateTime @default(now())
    
    // Relations
    //site Site @relation(fields: [siteId], references: [siteId])
    //siteId Int //@default(0) // Provided by load
    
    // Relations
    //siteObservations SiteObservation[]

    //@@unique([seqId, siteId])
}


